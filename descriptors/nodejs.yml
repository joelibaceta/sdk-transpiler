expression_patterns:
  language-tags: 
    pattern: !ruby/regexp /(?<open>exports\.run\s\=\sfunction\s\(req\,\sres\)\s\{)(?<body>[\w\W]*)(?<close>\}\;)/m 
    format: "exports.run = function (req, res) {\n {{body}} \n};"
  variables: 
    pattern: !ruby/regexp /(?<variable_prefix>\$)(?<object>\w+)(?<caller>\-\>)(?<property>.*?)(?<equal>\s=\s|=)(?<value>.*?)(?<endline>\;)/m 
    format: "{{object}}[\"{{property}}\"] = {{value}};"
  object-instantiation: 
    pattern: !ruby/regexp /(?<variable_prefix>\$)(?<object>\w+)(?<equal>\s=\s|=)(?<instantiation>new MercadoPago\\)(?<class>.*?)(?<method>\(\))(?<endline>\;)/m 
    format: "var {{object}} = {};"
  method-call: 
    pattern: !ruby/regexp /(?<variable_prefix>\$)(?<object>\w+)(?<caller>\-\>)(?<method>\w+)(?<params>.*?\(\))(?<endline>\;)/m   
    format: "mercadopago.{{object}}.{{method}}{{params}}.then(function (data) { \n\t \t//... Do Something \n\t });"